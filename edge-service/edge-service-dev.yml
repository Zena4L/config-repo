server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: edge-service
            client-secret: polar-keycloak-secret
            scope:
              - openid,roles
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/PolarBookshop
  gateway:
    httpclient:
      connect-timeout: 2000
      response-timeout: 5s
      pool:
        type: elastic
        max-idle-time: 15s
        max-life-time: 60s
    routes:
      - id: product-route
        uri: "${PRODUCT_SERVICE_URL:http://localhost:3000}/api/v1/product"
        predicates:
          - Path=/api/v1/product/**
        filters:
          - name: CircuitBreaker
            args:
              name: productCircuitBreaker
              fallbackUri: forward:/product-fallback
      - id: order-route
        uri: "${ORDER_SERVICE_URL:http://localhost:3002}/api/v1/order"
        predicates:
          - Path=/api/v1/order/**
        filters:
          - name: CircuitBreaker
            args:
              name: orderCircuitBreaker
    default-filters:
      - SaveSession
      - TokenRelay
      - name: RequestRateLimiter
        args:
          redis-rate-limiter:
            replenishRate: 10
            burstCapacity: 20
            requestTokens: 1
      - name: Retry
        args:
          retries: 3
          methods: GET
          series: SERVER_ERROR
          exceptions:
            - java.io.IOException
            - java.util.concurrent.TimeoutException
          backoff:
            firstBackoff: 50ms
            factor: 2
            basedOnPreviousValue: false
  session:
    timeout: 10m
    redis:
      namespace: ds:edge
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15s
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s

logging:
  level:
    io.github.resilience4j: DEBUG
